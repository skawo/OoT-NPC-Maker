#ifndef SCRIPTS_DEFINES_H
#define SCRIPTS_DEFINES_H

#define SCRIPT_INSTR_SIZE 2

#define SCRIPT_RETURN 65535
#define SCRIPT_STOP 0
#define SCRIPT_CONTINUE 1

#define NUM_SCRIPT_TEMP_VARS 8

typedef enum InstructionId
{
    IF,
    WHILE,
    AWAIT,
    SET,
    TALK,
    FORCE_TALK,
    TRADE,
    ENABLE_TALKING,
    SHOW_TEXTBOX,
    SHOW_TEXTBOX_SP,
    CLOSE_TEXTBOX,
    ITEM,  
    PLAY,
    SCRIPT,
    KILL,
    SPAWN,  
    WARP,
    ROTATION,
    POSITION,
    SCALE,
    FACE,
    PARTICLE,
    OCARINA,
    PICKUP,
    RETURN,
    GOTO,
    LABEL,
    SAVE,
    FADEIN,
    FADEOUT,
    QUAKE,
    CCALL,
    GET,
    GOTO_VAR,
    STOP,
    NOP,
} InstructionId;

typedef enum Vartype
{
    NORMAL = 0,
    RANDOM = 1,
    GLOBAL8 = 2,
    GLOBAL16 = 3,
    GLOBAL32 = 4,
    GLOBALF = 5,
    ACTOR8 = 6,
    ACTOR16 = 7,
    ACTOR32 = 8,
    ACTORF = 9,
    SAVE8 = 10,
    SAVE16 = 11,
    SAVE32 = 12,
    SAVEF = 13,
    SCRIPT_VAR = 14,
    SCRIPT_VARF = 15,  
} Vartype;

typedef enum Operator
{
    O_SET = 0,
    O_SUBTRACT = 1,
    O_ADD = 2,
    O_DIVIDE = 3,
    O_MULTIPLY = 4,  
} Operator;

typedef enum TargetActor
{
    TARGET_SELF = 0,
    TARGET_PLAYER = 1,
    TARGET_NPCMAKER = 2,
    TARGET_ACTOR_ID = 3,
    TARGET_REF_ACTOR = 4,
} TargetActor;

typedef enum DataType
{
    INT8,
    UINT8,
    INT16,
    UINT16,
    INT32,
    UINT32,
    FLOAT,
    BOOL
} DataType;

typedef enum CommonSubId
{
    SUBT_RANDOM = 241,
    SUBT_GLOBAL8 = 242,
    SUBT_GLOBAL16 = 243,
    SUBT_GLOBAL32 = 244,
    SUBT_GLOBALF = 245,
    SUBT_ACTOR8 = 246,
    SUBT_ACTOR16 = 247,
    SUBT_ACTOR32 = 248,
    SUBT_ACTORF = 249,
    SUBT_SAVE8 = 250,
    SUBT_SAVE16 = 251,
    SUBT_SAVE32 = 252,
    SUBT_SAVEF = 253,
    SUBT_VAR = 254,
    SUBT_VARF = 255,
} CommonSubId;

typedef enum SetSubId
{
    SET_TARGET_LIMB,
    SET_TARGET_DISTANCE,
    SET_HEAD_LIMB,
    SET_WAIST_LIMB,
    SET_LOOKAT_TYPE,
    SET_HEAD_VERT_AXIS,
    SET_HEAD_HORIZ_AXIS,
    SET_WAIST_VERT_AXIS,
    SET_WAIST_HORIZ_AXIS,
    SET_CUTSCENE_SLOT,
    SET_BLINK_SEGMENT,
    SET_TALK_SEGMENT,
    SET_ALPHA,

    SET_MOVEMENT_DISTANCE,
    SET_MAXIMUM_ROAM,
    SET_MOVEMENT_LOOP_DELAY,
    SET_ATTACKED_SFX,
    SET_LIGHT_RADIUS,
    SET_NPC_ID,
    SET_CUTSCENE_FRAME,

    SET_COLLISION_RADIUS,
    SET_COLLISION_HEIGHT,
    SET_MOVEMENT_LOOP_START,
    SET_MOVEMENT_LOOP_END,
    SET_COLLISION_YOFFSET,
    SET_TARGET_OFFSET_X,
    SET_TARGET_OFFSET_Y,
    SET_TARGET_OFFSET_Z,
    SET_MODEL_OFFSET_X,
    SET_MODEL_OFFSET_Y,
    SET_MODEL_OFFSET_Z,
    SET_CAMERA_ID,
    SET_LOOKAT_OFFSET_X,
    SET_LOOKAT_OFFSET_Y,
    SET_LOOKAT_OFFSET_Z,
    SET_CURRENT_PATH_NODE,
    SET_CURRENT_ANIMATION_FRAME,
    SET_LIGHT_OFFSET_X,
    SET_LIGHT_OFFSET_Y,
    SET_LIGHT_OFFSET_Z,
    SET_TIMED_PATH_START_TIME,
    SET_TIMED_PATH_END_TIME,

    SET_MOVEMENT_SPEED,
    SET_TALK_RADIUS,
    SET_SMOOTHING_CONSTANT,
    SET_SHADOW_RADIUS,
    SET_RIDDEN_NPC,
    SET_UNCULL_FORWARD,
    SET_UNCULL_DOWN,
    SET_UNCULL_SCALE,

    SET_LOOP_MOVEMENT,
    SET_HAS_COLLISION,
    SET_DO_BLINKING_ANIMATIONS,
    SET_DO_TALKING_ANIMATIONS,
    SET_JUST_SCRIPT,
    SET_OPEN_DOORS,
    SET_MOVEMENT_IGNORE_Y,
    SET_FADES_OUT,
    SET_LIGHT_GLOW,
    SET_PAUSE_CUTSCENE,
    SET_INVISIBLE,
    SET_TALK_PERSIST,
    SET_IS_SPEAKING,
    SET_ANIM_INTERP_FRAMES,
    SET_CASTS_SHADOW,
    SET_NO_AUTO_ANIM,
    SET_TALK_MODE,

    SET_PLAYER_BOMBS,
    SET_PLAYER_BOMBCHUS,
    SET_PLAYER_ARROWS,
    SET_PLAYER_DEKUNUTS,
    SET_PLAYER_DEKUSTICKS,
    SET_PLAYER_BEANS,
    SET_PLAYER_SEEDS,
    SET_PLAYER_RUPEES,
    SET_PLAYER_HEALTH,
    SET_PLAYER_MAGIC,

    SET_ENV_COLOR,
    SET_LIGHT_COLOR,

    SET_RESPONSE_ACTIONS,

    SET_ANIMATION_OBJECT,
    SET_ANIMATION_OFFSET,
    SET_ANIMATION_STARTFRAME,
    SET_ANIMATION_ENDFRAME,
    SET_ANIMATION_SPEED,
    SET_FLAG_INF,
    SET_FLAG_EVENT,
    SET_FLAG_SWITCH,
    SET_FLAG_SCENE,
    SET_FLAG_TREASURE,
    SET_FLAG_ROOM_CLEAR,
    SET_FLAG_SCENE_COLLECT,
    SET_FLAG_TEMPORARY,
    SET_FLAG_INTERNAL,
    
    SET_MASS,

    SET_PRESS_SWITCHES,
    SET_IS_TARGETTABLE,
    SET_VISIBLE_ONLY_UNDER_LENS,
    SET_IS_ALWAYS_ACTIVE,
    SET_IS_ALWAYS_DRAWN,
    SET_REACTS_IF_ATTACKED,
    SET_EXISTS_IN_ALL_ROOMS,

    SET_GRAVITY_FORCE,
    SET_MOVEMENT_PATH_ID,
    SET_PLAYER_CAN_MOVE,
    SET_ACTOR_CAN_MOVE,
    SET_ANIMATION,
    SET_ANIMATION_INSTANTLY,
    SET_SCRIPT_START,
    SET_BLINK_PATTERN,
    SET_TALK_PATTERN,
    SET_SEGMENT_ENTRY,
    SET_DLIST_VISIBILITY,
    SET_CAMERA_TRACKING_ON,
    SET_EXT_VAR,
    SET_EXT_VARF,
    SET_TIME_OF_DAY,
    SET_ATTACKED_EFFECT,
    SET_MOVEMENT_TYPE,
    SET_GENERATES_LIGHT,
    SET_REF_ACTOR,
    SET_PLAYER_ANIMATION,
    SET_PLAYER_ANIMATE_MODE,
    
    SET_DLIST_COLOR,
    SET_DLIST_OFFSET,

    SET_DLIST_TRANS_X,
    SET_DLIST_TRANS_Y,
    SET_DLIST_TRANS_Z,
    SET_DLIST_SCALE,

    SET_DLIST_ROT_X,
    SET_DLIST_ROT_Y,
    SET_DLIST_ROT_Z,
    
    SET_DLIST_LIMB,
    SET_DLIST_OBJECT,

    SET_RAM,
    SET_LABELTOVAR,
    SET_LABELTOVARF,

    SET_DEBUG_VAR,
    SET_DEBUG_VARF,
} SetSubId;

typedef enum GetSubId
{
    GET_EXT_VAR,
    GET_EXT_VARF,
} GetSubId;

typedef enum IfWhileSubId
{
    IF_FLAG_INF,
    IF_FLAG_EVENT,
    IF_FLAG_SWITCH,
    IF_FLAG_SCENE,
    IF_FLAG_TREASURE,
    IF_FLAG_ROOM_CLEAR,
    IF_FLAG_SCENE_COLLECT,
    IF_FLAG_TEMPORARY,
    IF_FLAG_INTERNAL,

    IF_LINK_IS_ADULT,
    IF_IS_DAY,
    IF_IS_TALKING,
    IF_PLAYER_HAS_EMPTY_BOTTLE,
    IF_IN_CUTSCENE,
    IF_TEXTBOX_ON_SCREEN,
    IF_TEXTBOX_DRAWING,
    IF_PLAYER_HAS_MAGIC,
    IF_ATTACKED,
    IF_REF_ACTOR_EXISTS,
    IF_PICKUP_IDLE,
    IF_PICKUP_PICKED_UP,
    IF_PICKUP_THROWN,
    IF_PICKUP_LANDED,
    IF_IS_SPEAKING,

    IF_PLAYER_RUPEES,
    IF_SCENE_ID,
    IF_PLAYER_SKULLTULAS,
    IF_PATH_NODE,
    IF_ANIMATION_FRAME,
    IF_CUTSCENE_FRAME,
    IF_PLAYER_HEALTH,
    IF_PLAYER_MAGIC,
    IF_PLAYER_BOMBS,
    IF_PLAYER_BOMBCHUS,
    IF_PLAYER_ARROWS,
    IF_PLAYER_DEKUNUTS,
    IF_PLAYER_DEKUSTICKS,
    IF_PLAYER_BEANS,
    IF_PLAYER_SEEDS,
    IF_EXT_VAR,
    IF_EXT_VARF,

    IF_STICK_X,
    IF_STICK_Y,

    IF_ITEM_BEING_TRADED,
    IF_TRADE_STATUS,
    IF_PLAYER_MASK,
    IF_TIME_OF_DAY,
    IF_ANIMATION,
    IF_PLAYER_HAS_INVENTORY_ITEM,
    IF_PLAYER_HAS_QUEST_ITEM,
    IF_PLAYER_HAS_DUNGEON_ITEM,
    IF_BUTTON_PRESSED,
    IF_BUTTON_HELD,
    IF_TARGETTED,

    IF_DISTANCE_FROM_PLAYER,
    IF_DISTANCE_FROM_REF_ACTOR,
    IF_LENS_OF_TRUTH_ON,
	IF_DAMAGED_BY,
    IF_ROOM_ID,

    IF_CURRENT_STATE,
    IF_CCALL,
    IF_DEBUG_VAR,
    IF_DEBUG_VARF,
    IF_ACTOR_EXISTS,

} IfWhileSubId;

typedef enum AwaitSubId
{
    AWAIT_FLAG_INF,
    AWAIT_FLAG_EVENT,
    AWAIT_FLAG_SWITCH,
    AWAIT_FLAG_SCENE,
    AWAIT_FLAG_TREASURE,
    AWAIT_FLAG_ROOM_CLEAR,
    AWAIT_FLAG_SCENE_COLLECT,
    AWAIT_FLAG_TEMPORARY,
    AWAIT_FLAG_INTERNAL,

    AWAIT_MOVEMENT_PATH_END,
    AWAIT_RESPONSE,
    AWAIT_TALKING_END,
    AWAIT_TEXTBOX_ON_SCREEN,
    AWAIT_FOREVER,

    AWAIT_PATH_NODE,
    AWAIT_FRAMES,
    AWAIT_ANIMATION_FRAME,
    AWAIT_CUTSCENE_FRAME,
    AWAIT_TIME_OF_DAY,

    AWAIT_STICK_X,
    AWAIT_STICK_Y,

    AWAIT_BUTTON_PRESSED,
    AWAIT_BUTTON_HELD,
    AWAIT_TEXTBOX_NUM,
    AWAIT_TEXTBOX_DISMISSED,
    AWAIT_TEXTBOX_DRAWING,

    AWAIT_ANIMATION_END,
    AWAIT_PLAYER_ANIMATION_END,
    AWAIT_EXT_VAR,
    AWAIT_EXT_VARF,

    AWAIT_CURRENT_STATE,
    AWAIT_CCALL,
    AWAIT_ACTOR_EXISTS,

} AwaitSubId;

typedef enum CompareType
{
    BOOL_COMPARE,
    VALUE_COMPARE,
} CompareType;

typedef enum BoolCondition
{
    C_FALSE = 0,
    C_TRUE = 1,
} BoolCondition;

typedef enum ValCondition
{
    C_EQUALTO = 0,
    C_LESSTHAN = 1,
    C_MORETHAN = 2,
    C_LESSOREQ = 3,
    C_MOREOREQ = 4,
    C_NOTEQUAL = 5,
} ValCondition;

typedef enum TradeStatus
{
    TRADE_SUCCESSFUL,
    TRADE_TALKED_TO,
    TRADE_FAILURE,
} TradeStatus;

typedef enum FaceSubId
{
    FACE_TOWARDS,
    FACE_AND,
    FACE_AWAY_FROM,
} FaceSubId;

typedef enum RotationSubId
{
    ROT_SET,
    ROT_ROTATE_TO,
    ROT_ROTATE_BY,
} RotationSubId;

typedef enum PositionSubId
{
    POS_SET,
    POS_MOVE_TO,
    POS_MOVE_BY,
    POS_MOVE_BY_DIRECTION,
    POS_MOVE_BY_RELATIVE,
    POS_MOVE_BY_RELATIVE_DIRECTION,
} PositionSubId;

typedef enum Scale_SubId
{
    SCALE_SET,
    SCALE_SCALE_TO,
    SCALE_SCALE_BY,
} Scale_SubId;

typedef enum Play_SubId
{
    PLAY_SFX,
    PLAY_BGM,
    PLAY_CUTSCENE,
    PLAY_CUTSCENE_ID,
    PLAY_SFX_GLOBAL,
    PLAY_SFX_PARAMS,
    PLAY_SFX_GLOBAL_PARAMS,
} Play_SubId;

typedef enum Item_SubId
{
    ITEM_AWARD,
    ITEM_GIVE,
    ITEM_TAKE,
} Item_SubId;

typedef enum PositionSubType
{
    POSTYPE_ABSOLUTE,
    POSTYPE_RELATIVE,
    POSTYPE_DIRECTION,
    POSTYPE_REFACTOR_RELATIVE,
    POSTYPE_REFACTOR_RELATIVE_DIRECTION,
} PositionSubType;

typedef enum Particle_TypeId
{
    PARTICLE_DUST,
    PARTICLE_EXPLOSION,
    PARTICLE_RING,
    PARTICLE_SPARK,
    PARTICLE_LIGHTNING,
    PARTICLE_BUBBLE,
    PARTICLE_DISPLAY_LIST,
    PARTICLE_WATER_SPLASH,
    PARTICLE_SMOKE,
    PARTICLE_HIT_MARK_FLASH,
    PARTICLE_HIT_MARK_DUST,
    PARTICLE_HIT_MARK_BURST,
    PARTICLE_HIT_MARK_SPARK,
    PARTICLE_LIGHT_POINT,
    PARTICLE_RED_FLAME,
    PARTICLE_BLUE_FLAME,
    PARTICLE_SEARCH_EFFECT,
    PARTICLE_ICE_CHUNK,
    PARTICLE_ICE_BURST,
    PARTICLE_SCORE,
    PARTICLE_FLAME,
    PARTICLE_BURN_MARK,
    PARTICLE_DODONGO_FIRE,
    PARTICLE_FREEZARD_SMOKE,
    PARTICLE_ELECTRICITY,
    PARTICLE_FOCUSED_STAR,
    PARTICLE_DISPERSED_STAR,
    PARTICLE_FIRE_TAIL
} Particle_TypeId;

typedef enum StopSubIds
{
    STOP_SFX,
    STOP_BGM,
} StopSubIds;

#endif