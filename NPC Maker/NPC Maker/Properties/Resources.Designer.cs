//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NPC_Maker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NPC_Maker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;configurations&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;MIPS&quot;,
        ///      &quot;includePath&quot;: [
        ///        &quot;${workspaceFolder}/**&quot;,
        ///        &quot;../gcc/mips64/include/z64hdr/**&quot;,
        ///        &quot;../gcc/mips64/include&quot;
        ///      ],
        ///      &quot;defines&quot;: [
        ///        &quot;_DEBUG&quot;,
        ///        &quot;UNICODE&quot;,
        ///        &quot;_UNICODE&quot;,
        ///        &quot;_LANGUAGE_C &quot;
        ///      ],
        ///      &quot;compilerPath&quot;: &quot;C:/msys64/mingw32/bin/gcc.exe&quot;
        ///    }
        ///  ],
        ///  &quot;version&quot;: 4
        ///}.
        /// </summary>
        internal static string c_cpp_properties {
            get {
                return ResourceManager.GetString("c_cpp_properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;z64hdr/oot_mq_debug/z64hdr.h&gt;
        ///
        ////*
        ///To make NPC Maker able to use your function, it must have the following form:
        ///
        ///1. Its name must have a NpcM_type_ prefix (eg. NpcM_s32_Function),
        ///2. Prefix type should match return type,
        ///3. Return type should be one of the following: u8, s8, u16, s16, u32, s32, float
        ///4. Must have two parameters: NpcMaker* and PlayState*
        ///5. A unique name
        ///
        ///Examples of valid function signatures are thus:
        ///
        ///s32 NpcM_s32_Function(NpcMaker* npc, PlayState* play)
        ///float NpcM_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmbeddedOverlay {
            get {
                return ResourceManager.GetString("EmbeddedOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;files.associations&quot;: {
        ///    },
        ///}.
        /// </summary>
        internal static string settings {
            get {
                return ResourceManager.GetString("settings", resourceCulture);
            }
        }
    }
}
